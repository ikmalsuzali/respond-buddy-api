version: "3.3"
services:
  # pg:
  #   image: "postgres:11"
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   container_name: "pg"
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - internal

  api:
    build: .
    container_name: api
    restart: always
    depends_on:
      - pg
    ports:
      - "8090:8090"
    environment:
      - PORT=8090
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_URL=${DATABASE_URL}
      - STRIPE_SECRET_DEMO=${STRIPE_SECRET_DEMO}
      - STRIPE_WEBHOOK_DEMO=${STRIPE_WEBHOOK_DEMO}
      - STRIPE_SECRET_LIVE=${STRIPE_SECRET_LIVE}
      - STRIPE_WEBHOOK_LIVE=${STRIPE_WEBHOOK_LIVE}
      - BASE_URL=${BASE_URL}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
    networks:
      - internal

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge
